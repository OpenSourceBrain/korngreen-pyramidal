#!/bin/bash
#
# Example PBS script to run a job on the pinky cluster.
# The lines beginning #PBS set various queuing parameters.
#
# o -N Job Name
#PBS -N 220206 
#PBS -q makbil
#
#
# o -l resource lists that control where job goes
#PBS -l nodes=16:ppn=5
#PBS -l walltime=24:00:00
# o Where to write output
#PBS -e stderr 
#PBS -o stdout
#
# o Export all my environment variables to the job
#PBS -V
#
#PBS -m bea
#PBS -M korngra@mail.biu.ac.il
echo $PBS_NODEFILE
cat  $PBS_NODEFILE
echo 'The list above shows the nodes this job has exclusive access to.'
echo 'The list can be found in the file named in the variable $PBS_NODEFILE'

echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------
LOCAL_IF=`cat $PBS_NODEFILE | head -n 1`
echo Head node is  $LOCAL_IF
NPROCS=`wc -l < $PBS_NODEFILE`
echo Number of cores devoted to the job $NPROCS
cd $PBS_O_WORKDIR

NODEFILE_UNIQ=/tmp/`basename ${PBS_NODEFILE}`.uniqu

cat $PBS_NODEFILE | uniq > $NODEFILE_UNIQ
NNODES=`wc -l < $NODEFILE_UNIQ`
mpdboot   --totalnum=$NNODES --file=$NODEFILE_UNIQ --verbose --ifhn=$LOCAL_IF

echo Testing the ring.....
mpdtrace

mpdringtest 100

mpdrun -l -n $NNODES hostname

mpiexec -machinefile $PBS_NODEFILE -n $NPROCS  nrniv -mpi ga.hoc 

##mpdallexit

exit 0
