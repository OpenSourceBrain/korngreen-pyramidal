COMMENT

   **************************************************
   File generated by: neuroConstruct v1.7.1 
   **************************************************

   This file holds the implementation in NEURON of the Cell Mechanism:
   bk (Type: Channel mechanism, Model: Template based ChannelML file)

   with parameters: 
   /channelml/@units = Physiological Units 
   /channelml/notes = ChannelML file containing a single (Ca activated) K+ Channel (BK-type) description, from a model of Layer 5 Pyramidal Neurons described in Almog, M &a ... 
   /channelml/channel_type/@name = bk 
   /channelml/channel_type/status/@value = in_progress 
   /channelml/channel_type/status/contributor/name = Boris Marin 
   /channelml/channel_type/authorList/modelAuthor[1]/name = Mara Almog 
   /channelml/channel_type/authorList/modelAuthor[2]/name = Alon Korngreen 
   /channelml/channel_type/authorList/modelTranslator/name = Boris Marin 
   /channelml/channel_type/authorList/modelTranslator/email = borismarin -at- gmail.com 
   /channelml/channel_type/publication/comment = Model originally described in this article 
   /channelml/channel_type/publication/fullTitle =  Akemann, W., &amp; Kn√∂pfel, T. (2006). Interaction of Kv3 potassium channels and resurgent sodium current influences the rate of spontaneous firing o ... 
   /channelml/channel_type/publication/pubmedRef = http://www.ncbi.nlm.nih.gov/pubmed/16641240 
   /channelml/channel_type/parameters/parameter[1]/@name = q10 
   /channelml/channel_type/parameters/parameter[1]/@value = 3 
   /channelml/channel_type/parameters/parameter[2]/@name = cvm 
   /channelml/channel_type/parameters/parameter[2]/@value = 28.9 
   /channelml/channel_type/parameters/parameter[3]/@name = ckm 
   /channelml/channel_type/parameters/parameter[3]/@value = 6.2 
   /channelml/channel_type/parameters/parameter[4]/@name = ctm 
   /channelml/channel_type/parameters/parameter[4]/@value = 0.000505 
   /channelml/channel_type/parameters/parameter[5]/@name = cvtm1 
   /channelml/channel_type/parameters/parameter[5]/@value = 86.4 
   /channelml/channel_type/parameters/parameter[6]/@name = cktm1 
   /channelml/channel_type/parameters/parameter[6]/@value = -10.1 
   /channelml/channel_type/parameters/parameter[7]/@name = cvtm2 
   /channelml/channel_type/parameters/parameter[7]/@value = -33.3 
   /channelml/channel_type/parameters/parameter[8]/@name = cktm2 
   /channelml/channel_type/parameters/parameter[8]/@value = 10 
   /channelml/channel_type/parameters/parameter[9]/@name = ctauz 
   /channelml/channel_type/parameters/parameter[9]/@value = 1 
   /channelml/channel_type/parameters/parameter[10]/@name = ch 
   /channelml/channel_type/parameters/parameter[10]/@value = 0.085 
   /channelml/channel_type/parameters/parameter[11]/@name = cvh 
   /channelml/channel_type/parameters/parameter[11]/@value = 32 
   /channelml/channel_type/parameters/parameter[12]/@name = ckh 
   /channelml/channel_type/parameters/parameter[12]/@value = -5.8 
   /channelml/channel_type/parameters/parameter[13]/@name = cth 
   /channelml/channel_type/parameters/parameter[13]/@value = 0.0019 
   /channelml/channel_type/parameters/parameter[14]/@name = cvth1 
   /channelml/channel_type/parameters/parameter[14]/@value = 48.5 
   /channelml/channel_type/parameters/parameter[15]/@name = ckth1 
   /channelml/channel_type/parameters/parameter[15]/@value = -5.2 
   /channelml/channel_type/parameters/parameter[16]/@name = cvth2 
   /channelml/channel_type/parameters/parameter[16]/@value = -54.2 
   /channelml/channel_type/parameters/parameter[17]/@name = ckth2 
   /channelml/channel_type/parameters/parameter[17]/@value = 12.9 
   /channelml/channel_type/parameters/parameter[18]/@name = zhalf 
   /channelml/channel_type/parameters/parameter[18]/@value = 0.01 
   /channelml/channel_type/current_voltage_relation/@cond_law = ohmic 
   /channelml/channel_type/current_voltage_relation/@ion = k 
   /channelml/channel_type/current_voltage_relation/@default_gmax = 0 
   /channelml/channel_type/current_voltage_relation/@default_erev = -100 
   /channelml/channel_type/current_voltage_relation/conc_dependence/@name = Calcium 
   /channelml/channel_type/current_voltage_relation/conc_dependence/@ion = ca 
   /channelml/channel_type/current_voltage_relation/conc_dependence/@charge = 2 
   /channelml/channel_type/current_voltage_relation/conc_dependence/@variable_name = ca_conc 
   /channelml/channel_type/current_voltage_relation/conc_dependence/@min_conc = 1e-12 
   /channelml/channel_type/current_voltage_relation/conc_dependence/@max_conc = 1 
   /channelml/channel_type/current_voltage_relation/q10_settings/@q10_factor = 3 
   /channelml/channel_type/current_voltage_relation/q10_settings/@experimental_temp = 22 
   /channelml/channel_type/current_voltage_relation/gate[1]/@name = m 
   /channelml/channel_type/current_voltage_relation/gate[1]/@instances = 3 
   /channelml/channel_type/current_voltage_relation/gate[1]/closed_state/@id = mc 
   /channelml/channel_type/current_voltage_relation/gate[1]/open_state/@id = mo 
   /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@name = tau 
   /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@from = mc 
   /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@to = mo 
   /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@expr_form = generic 
   /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@expr = (1e3) * ( ctm + 1. / ( exp(-((v+5) + cvtm1)/cktm1) + exp(-((v + 5)+cvtm2)/cktm2)) ) 
   /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@name = inf 
   /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@from = mc 
   /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@to = mo 
   /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@expr_form = generic 
   /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@expr = 1 / (1 + exp(-((v+5) + cvm) / ckm)) 
   /channelml/channel_type/current_voltage_relation/gate[2]/@name = z 
   /channelml/channel_type/current_voltage_relation/gate[2]/@instances = 2 
   /channelml/channel_type/current_voltage_relation/gate[2]/closed_state/@id = zc 
   /channelml/channel_type/current_voltage_relation/gate[2]/open_state/@id = zo 
   /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@name = tau 
   /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@from = zc 
   /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@to = zo 
   /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@expr_form = generic 
   /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@expr = ctauz 
   /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@name = inf 
   /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@from = zc 
   /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@to = zo 
   /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@expr_form = generic 
   /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@expr = 1 / (1 + zhalf/(1e6*ca_conc)) 
   /channelml/channel_type/current_voltage_relation/gate[3]/@name = h 
   /channelml/channel_type/current_voltage_relation/gate[3]/@instances = 1 
   /channelml/channel_type/current_voltage_relation/gate[3]/closed_state/@id = hc 
   /channelml/channel_type/current_voltage_relation/gate[3]/open_state/@id = ho 
   /channelml/channel_type/current_voltage_relation/gate[3]/time_course/@name = tau 
   /channelml/channel_type/current_voltage_relation/gate[3]/time_course/@from = hc 
   /channelml/channel_type/current_voltage_relation/gate[3]/time_course/@to = ho 
   /channelml/channel_type/current_voltage_relation/gate[3]/time_course/@expr_form = generic 
   /channelml/channel_type/current_voltage_relation/gate[3]/time_course/@expr = (1e3) * (cth + 1 / (exp(-((v+5)+cvth1)/ckth1) + exp(-((v+5)+cvth2)/ckth2))) 
   /channelml/channel_type/current_voltage_relation/gate[3]/steady_state/@name = inf 
   /channelml/channel_type/current_voltage_relation/gate[3]/steady_state/@from = hc 
   /channelml/channel_type/current_voltage_relation/gate[3]/steady_state/@to = ho 
   /channelml/channel_type/current_voltage_relation/gate[3]/steady_state/@expr_form = generic 
   /channelml/channel_type/current_voltage_relation/gate[3]/steady_state/@expr = ch + (1-ch) / ( 1+exp(-((v+5)+cvh)/ckh) ) 

// File from which this was generated: /Users/borismarin/git/korngreen-pyramidal/neuroConstruct/cellMechanisms/bk/BKChannel.xml

// XSL file with mapping to simulator: /Users/borismarin/git/korngreen-pyramidal/neuroConstruct/cellMechanisms/bk/ChannelML_v1.8.1_NEURONmod.xsl

ENDCOMMENT


?  This is a NEURON mod file generated from a ChannelML file

?  Unit system of original ChannelML file: Physiological Units

COMMENT
    ChannelML file containing a single (Ca activated) K+ Channel (BK-type) description, from a model of Layer 5 Pyramidal Neurons described in Almog, M & Korngreen, A (2013) A quantitative description of dendritic conductances and its application to dendritic excitation in layer 5 pyramidal neurons. J Neurosci
ENDCOMMENT

TITLE Channel: bk

UNITS {
    (mA) = (milliamp)
    (mV) = (millivolt)
    (S) = (siemens)
    (um) = (micrometer)
    (molar) = (1/liter)
    (mM) = (millimolar)
    (l) = (liter)
}


    
NEURON {
      

    SUFFIX bk
    USEION k READ ek WRITE ik VALENCE 1  ? reversal potential of ion is read, outgoing current is written
           
        
    USEION ca READ cai VALENCE 2 ? internal concentration of ion is read

    
    RANGE gmax, gion
    
    RANGE moinf, motau
    
    RANGE zoinf, zotau
    
    RANGE hoinf, hotau
    
    RANGE q10
    RANGE cvm
    RANGE ckm
    RANGE ctm
    RANGE cvtm1
    RANGE cktm1
    RANGE cvtm2
    RANGE cktm2
    RANGE ctauz
    RANGE ch
    RANGE cvh
    RANGE ckh
    RANGE cth
    RANGE cvth1
    RANGE ckth1
    RANGE cvth2
    RANGE ckth2
    RANGE zhalf
}

PARAMETER { 
      

    gmax = 0 (S/cm2)  ? default value, should be overwritten when conductance placed on cell
    
    q10 = 3 : Note units of this will be determined by its usage in the generic functions

    cvm = 28.9 : Note units of this will be determined by its usage in the generic functions

    ckm = 6.2 : Note units of this will be determined by its usage in the generic functions

    ctm = 0.000505 : Note units of this will be determined by its usage in the generic functions

    cvtm1 = 86.4 : Note units of this will be determined by its usage in the generic functions

    cktm1 = -10.1 : Note units of this will be determined by its usage in the generic functions

    cvtm2 = -33.3 : Note units of this will be determined by its usage in the generic functions

    cktm2 = 10 : Note units of this will be determined by its usage in the generic functions

    ctauz = 1 : Note units of this will be determined by its usage in the generic functions

    ch = 0.085 : Note units of this will be determined by its usage in the generic functions

    cvh = 32 : Note units of this will be determined by its usage in the generic functions

    ckh = -5.8 : Note units of this will be determined by its usage in the generic functions

    cth = 0.0019 : Note units of this will be determined by its usage in the generic functions

    cvth1 = 48.5 : Note units of this will be determined by its usage in the generic functions

    ckth1 = -5.2 : Note units of this will be determined by its usage in the generic functions

    cvth2 = -54.2 : Note units of this will be determined by its usage in the generic functions

    ckth2 = 12.9 : Note units of this will be determined by its usage in the generic functions

    zhalf = 0.01 : Note units of this will be determined by its usage in the generic functions

}



ASSIGNED {
      

    v (mV)
    
    celsius (degC)
          

    ? Reversal potential of k
    ek (mV)
    ? The outward flow of ion: k calculated by rate equations...
    ik (mA/cm2)
          

    ? The internal concentration of ion: ca is used in the rate equations...
    cai (mM)   
    
    
    gion (S/cm2)
    moinf
    motau (ms)
    zoinf
    zotau (ms)
    hoinf
    hotau (ms)
    
}

BREAKPOINT { 
    SOLVE states METHOD derivimplicit
    gion = gmax * (mo
^3) * (zo
^2) * (ho
^1)      

    ik = gion*(v - ek)
            

}



INITIAL {
    
    ek = -100
        
    settables(v,cai)
    mo = moinf
        zo = zoinf
        ho = hoinf
        
    
}
    
STATE {
    mo
    zo
    ho
    
}



DERIVATIVE states {
    settables(v,cai)
    mo' = (moinf - mo)/motau
            zo' = (zoinf - zo)/zotau
            ho' = (hoinf - ho)/hotau
            

}

PROCEDURE settables(v(mV), cai(mM)) {  
    
    ? Note: not all of these may be used, depending on the form of rate equations
    LOCAL  alpha, beta, tau, inf, gamma, zeta, ca_conc
, temp_adj_m
, temp_adj_z
, temp_adj_h
    
    UNITSOFF
    
    ? There is a Q10 factor which will alter the tau of the gates 
                 

    temp_adj_m = 3^((celsius - 22)/10)     

    temp_adj_z = 3^((celsius - 22)/10)     

    temp_adj_h = 3^((celsius - 22)/10)
    ? Gate depends on the concentration of ca
    ca_conc = cai ? In NEURON, the variable for the concentration  of ca is cai
    
            
                
           

        
    ?      ***  Adding rate equations for gate: m  ***
         
    ? Found a generic form of the rate equation for tau, using expression: (1e3) * ( ctm + 1. / ( exp(-((v+5) + cvtm1)/cktm1) + exp(-((v + 5)+cvtm2)/cktm2)) )
    
    ? Equations can depend on concentration. NEURON uses 'SI Units' internally for concentration, 
    ? but the ChannelML file is in Physiological Units...
    ca_conc = ca_conc / 1000000
    tau = (1e3) * ( ctm + 1. / ( exp(-((v+5) + cvtm1)/cktm1) + exp(-((v + 5)+cvtm2)/cktm2)) )
        
    ? Resetting concentration...
    ca_conc = ca_conc * 1000000
    
    motau = tau/temp_adj_m
     
    ? Found a generic form of the rate equation for inf, using expression: 1 / (1 + exp(-((v+5) + cvm) / ckm))
    
    ? Equations can depend on concentration. NEURON uses 'SI Units' internally for concentration, 
    ? but the ChannelML file is in Physiological Units...
    ca_conc = ca_conc / 1000000
    inf = 1 / (1 + exp(-((v+5) + cvm) / ckm))
        
    ? Resetting concentration...
    ca_conc = ca_conc * 1000000
    
    moinf = inf
    


    ?     *** Finished rate equations for gate: m ***
    

    
            
                
           

        
    ?      ***  Adding rate equations for gate: z  ***
         
    ? Found a generic form of the rate equation for tau, using expression: ctauz
    
    ? Equations can depend on concentration. NEURON uses 'SI Units' internally for concentration, 
    ? but the ChannelML file is in Physiological Units...
    ca_conc = ca_conc / 1000000
    tau = ctauz
        
    ? Resetting concentration...
    ca_conc = ca_conc * 1000000
    
    zotau = tau/temp_adj_z
     
    ? Found a generic form of the rate equation for inf, using expression: 1 / (1 + zhalf/(1e6*ca_conc))
    
    ? Equations can depend on concentration. NEURON uses 'SI Units' internally for concentration, 
    ? but the ChannelML file is in Physiological Units...
    ca_conc = ca_conc / 1000000
    inf = 1 / (1 + zhalf/(1e6*ca_conc))
        
    ? Resetting concentration...
    ca_conc = ca_conc * 1000000
    
    zoinf = inf
    


    ?     *** Finished rate equations for gate: z ***
    

    
            
                
           

        
    ?      ***  Adding rate equations for gate: h  ***
         
    ? Found a generic form of the rate equation for tau, using expression: (1e3) * (cth + 1 / (exp(-((v+5)+cvth1)/ckth1) + exp(-((v+5)+cvth2)/ckth2)))
    
    ? Equations can depend on concentration. NEURON uses 'SI Units' internally for concentration, 
    ? but the ChannelML file is in Physiological Units...
    ca_conc = ca_conc / 1000000
    tau = (1e3) * (cth + 1 / (exp(-((v+5)+cvth1)/ckth1) + exp(-((v+5)+cvth2)/ckth2)))
        
    ? Resetting concentration...
    ca_conc = ca_conc * 1000000
    
    hotau = tau/temp_adj_h
     
    ? Found a generic form of the rate equation for inf, using expression: ch + (1-ch) / ( 1+exp(-((v+5)+cvh)/ckh) )
    
    ? Equations can depend on concentration. NEURON uses 'SI Units' internally for concentration, 
    ? but the ChannelML file is in Physiological Units...
    ca_conc = ca_conc / 1000000
    inf = ch + (1-ch) / ( 1+exp(-((v+5)+cvh)/ckh) )
        
    ? Resetting concentration...
    ca_conc = ca_conc * 1000000
    
    hoinf = inf
    


    ?     *** Finished rate equations for gate: h ***
    

         

}


UNITSON


