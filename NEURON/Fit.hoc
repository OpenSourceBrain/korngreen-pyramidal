

load_3dcell(CellFileName)
if (read_data==1){
    Read_Exp(ExperimentName)
}else{
    track_data =0
    AlllocateStructures()
}
if (track_data ==1){
     ShowSoma() 
     ShowDend()
}

  a_soma CC = new IClamp(stimPosS)
  CC.del=CCDelay
  CC.dur=CCDuration

proc init(){
            finitialize(-70)
            save_dt=dt
            dt=10
            i=0
            for i=1,38 fadvance()
            print t
            dt=save_dt
}

proc my_run(){
	init()
	ii=0
	for ii=1,tstop/dt{
		fadvance()
		FF.printf("%g \t %g \t %g \n", t, a_soma.v(0.5),apic[12].v(0.6))
	}
}

a_soma SomaStimSec = new SectionRef()
apic[11] DendStimSec = new SectionRef()
//ApicalDendSectionName = new SectionRef()
DendStimSec.sec {nseg=40}


func CalcSweep(){ local ChiTemp	
	ChiTemp=0
	   fcurrent()
	  CC.amp=$1
          t = 0
	  finitialize(Vrest)
     	  fcurrent()	
	
	
	dt=RecordDt
	for (FitTStepCount=0;FitTStepCount<NumPointsPerV[VStepCount]-read_data;FitTStepCount+=1){
		fadvance()
		SimSom[VStepCount].x[FitTStepCount]=SomaStimSec.sec.v(stimPosS) 
		SimDend[VStepCount].x[FitTStepCount]=DendStimSec.sec.v(stimPosD)
                SimTime[VStepCount].x[FitTStepCount]=AddTime
		AddTime+=dt	  
	}
       	return ChiTemp	
}

func RunFit(){
	Chisq=0
	density()
	for (VStepCount=FirstVStep;VStepCount<=LastVStep;VStepCount+=1) {
		ChiSweep=CalcSweep(vclmp[VStepCount])
	}

	//show graphes
	if (track_data ==1){	
	    UpdateSoma()
	    UpdateDend()
	}
	
	doNotify()
        return Chisq
}

func tfunk(){local Chisq,dumm
	//PC.take("TASK",&Chisq,&dumm,strmv,transvec)
        Chisq=0
        ra  = transvec.x(0)
        rm = transvec.x(1)
        c_m = transvec.x(2)
        epas_sim  = transvec.x(3)
        gih_end  = transvec.x(4)
	gih_x2 = transvec.x(5)
        gih_alpha=transvec.x(6)
	gih_start=transvec.x(7)
	ih_q10=transvec.x(8)
	if(NP>9){
		gkslow_start= transvec.x(9)
		gkslow_alpha= transvec.x(10)
		gkslow_beta=transvec.x(11)
		//kfast
		gka_start= transvec.x(12)
		gka_alpha= transvec.x(13)
		gka_beta= transvec.x(14)
	}
	if(NP>15){
		gna_soma = transvec.x(15)
		gna_api = transvec.x(16)
		dist_na = transvec.x(17)
		na_shift1 = transvec.x(18)
		na_shift2 = transvec.x(19)
		pcah_soma = transvec.x(20)
		pcah_api = transvec.x(21)
		dist_cah = transvec.x(22)
		cah_shift=transvec.x(23)
		cah_shifth=transvec.x(24)

		pcar_soma = transvec.x(25)
		pcar_api = transvec.x(26)
		dist_car = transvec.x(27)
                car_shift=transvec.x(28)
		car_shifth=transvec.x(29)
		car_qm=transvec.x(30)	
	
		gsk_soma=transvec.x(31)
		gsk_dend=transvec.x(32)
		dist_sk=transvec.x(33)
		gbk_soma=transvec.x(34)
		gbk_dend=transvec.x(35)
		dist_bk=transvec.x(36)		
	}
        density()
	//Chisq = RunFit()
	//machine_name(strmv)
        //PC.post("DONE",Chisq,dumm,strmv,transvec)
	return Chisq
}


//this function for my_parameters.hoc - instead of tfunc
proc myfunk(){local Chisq,dumm
         Chisq=0
         Chisq = RunFit()	
}
